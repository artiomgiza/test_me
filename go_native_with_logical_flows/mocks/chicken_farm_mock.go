// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/artiomgiza/test_me/go_native_with_logical_flows (interfaces: ChickenFarm)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockChickenFarm is a mock of ChickenFarm interface
type MockChickenFarm struct {
	ctrl     *gomock.Controller
	recorder *MockChickenFarmMockRecorder
}

// MockChickenFarmMockRecorder is the mock recorder for MockChickenFarm
type MockChickenFarmMockRecorder struct {
	mock *MockChickenFarm
}

// NewMockChickenFarm creates a new mock instance
func NewMockChickenFarm(ctrl *gomock.Controller) *MockChickenFarm {
	mock := &MockChickenFarm{ctrl: ctrl}
	mock.recorder = &MockChickenFarmMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockChickenFarm) EXPECT() *MockChickenFarmMockRecorder {
	return m.recorder
}

// GetPulletPrice mocks base method
func (m *MockChickenFarm) GetPulletPrice(arg0 int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPulletPrice", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPulletPrice indicates an expected call of GetPulletPrice
func (mr *MockChickenFarmMockRecorder) GetPulletPrice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPulletPrice", reflect.TypeOf((*MockChickenFarm)(nil).GetPulletPrice), arg0)
}
